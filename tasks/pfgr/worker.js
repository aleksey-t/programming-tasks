onmessage = function (e) {
    let тройкиЧисел = [];

    function проверитьПоТеоремеПифагора(a, b, c) {
        if (a === b === c) {
            return false;
        }

        let гипотенуза = a;
        let катет_1 = b;
        let катет_2 = c;

        if (b > a && b > c) {
            гипотенуза = b;
            катет_1 = a;
            катет_2 = c;
        }

        if (c > a && c > b) {
            гипотенуза = c;
            катет_1 = a;
            катет_2 = c;
        }

        let квадрат_гипотенузы = гипотенуза * гипотенуза;
        let сумма_квадратов_катетов = катет_1 * катет_1 + катет_2 * катет_2;

        return квадрат_гипотенузы === сумма_квадратов_катетов;
    }

    function убратьДубликатыИзМассиваСМассивами(массив) {
        let множествоИзСтрок = new Set();

        for (let i = 0; i < массив.length; i += 1) {
            множествоИзСтрок.add(массив[i].toString());
        }

        let массивИзСтрок = Array.from(множествоИзСтрок);
        let массивИзМассивов = массивИзСтрок.map(строка => строка.split(',').map(j => +j));

        return массивИзМассивов;
    }

    function искатьПифагоровыТройки(лимит) {
        for (let a = 2; a <= лимит; a += 1) {
            for (let b = 2; b <= лимит; b += 1) {
                for (let c = 2; c <= лимит; c += 1) {
                    if (проверитьПоТеоремеПифагора(a, b, c)) {
                        тройкиЧисел.push([a, b, c].sort((i, j) => i - j));
                    }
                }
                postMessage({
                    progress: Math.floor(a / (лимит / 100)),
                    percent: Math.floor(a / (лимит / 100)),
                });
            }
        }

        let результат = убратьДубликатыИзМассиваСМассивами(тройкиЧисел);

        postMessage({
            result: результат,
            percent: 100,
        });
    }

    искатьПифагоровыТройки(e.data);
}
